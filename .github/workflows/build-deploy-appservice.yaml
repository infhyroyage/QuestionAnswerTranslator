name: Build and Deploy App Service

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/build-deploy-appservice.yaml
      - react**

env:
  APIM_NAME: qatranslator-je-apim
  APIM_SUBSCRIPTION_NAME: subscriptions-functions
  APP_SERVICE_NAME: qatranslator-je-appservice
  COGNITIVE_NAME: qatranslator-je-cognitive
  GHCR_IMAGE_NAME: react
  GHCR_REPOSITORY_NAME: qatranslator
  RESOURCE_GROUP: qatranslator-je

jobs:
  build-ghcr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Login Azure as Contributor
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_AD_SP_CONTRIBUTOR_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_AD_SP_CONTRIBUTOR_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
          enable-AzPSSession: true

      - name: Get API Management Subscription Key
        id: get_api_management_subscription_key
        uses: azure/powershell@v1
        with:
          inlineScript: |
            $apimContext = New-AzApiManagementContext `
              -ResourceGroupName "${{ env.RESOURCE_GROUP }}" `
              -ServiceName "${{ env.APIM_NAME }}"
            $apimFunctionsSubscriptionKey = Get-AzApiManagementSubscriptionKey `
              -Context $apimContext `
              -SubscriptionId "${{ env.APIM_SUBSCRIPTION_NAME }}"
            $apimSubscriptionKey = $apimFunctionsSubscriptionKey.PrimaryKey
            Write-Output "::add-mask::${apimSubscriptionKey}"
            Write-Output "apim_subscription_key=${apimSubscriptionKey}" >> $env:GITHUB_OUTPUT
          azPSVersion: latest

      - name: Get Cognitive Service Account Key
        id: get_cognitive_key
        run: |
          cognitiveKey=(az cognitiveservices account keys list \
            -g ${{ env.RESOURCE_GROUP }} \
            -n ${{ env.COGNITIVE_NAME }} \
            --query "key1" \
            -o tsv)
          echo "cognitive_key=${cognitiveKey}" >> $GITHUB_OUTPUT

      - name: Replace Secure Environment Variables
        run: |
          sed -i \
            -e 's/VALUE_OF_REACT_APP_API_MANAGEMENT_SUBSCRIPTION_KEY/${{ steps.get_api_management_subscription_key.outputs.apim_subscription_key }}/g' \
            -e 's/VALUE_OF_REACT_APP_AZURE_AD_SP_MSAL_CLIENT_ID/${{ secrets.AZURE_AD_SP_MSAL_CLIENT_ID }}/g' \
            -e 's/VALUE_OF_REACT_APP_AZURE_COGNITIVE_KEY/${{ steps.get_cognitive_key.outputs.cognitive_key }}/g' \
            -e 's/VALUE_OF_REACT_APP_AZURE_TENANT_ID/${{ secrets.AZURE_TENANT_ID }}/g' \
            -e 's/VALUE_OF_REACT_APP_DEEPL_AUTH_KEY/${{ secrets.DEEPL_AUTH_KEY }}/g' \
            react/.env.production

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Build and Docker Push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: react/Dockerfile
          push: true
          tags: ghcr.io/${{ github.actor }}/${{ env.GHCR_REPOSITORY_NAME }}/${{ env.GHCR_IMAGE_NAME }}:${{ github.sha	}}

  deploy-appservice:
    runs-on: ubuntu-latest
    needs: build-ghcr
    steps:
      - name: Login Azure as Contributor
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_AD_SP_CONTRIBUTOR_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_AD_SP_CONTRIBUTOR_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

      - name: Deploy App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.APP_SERVICE_NAME }}
          images: ghcr.io/${{ github.actor }}/${{ env.GHCR_REPOSITORY_NAME }}/${{ env.GHCR_IMAGE_NAME }}:${{ github.sha	}}
