{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "azureApimPublisherEmail": {
      "type": "securestring"
    },
    "deeplAuthKey": {
      "type": "securestring"
    }
  },
  "variables": {
    "apim": {
      "apisHealthcheckName": "apis-healthcheck-functions",
      "apisName": "apis-functions",
      "loggersName": "loggers-insights",
      "name": "qatranslator-je-apim",
      "namedValuesNames": {
        "insightsInstrumentationKey": "named-values-insights-instrumentation-key"
      },
      "orgName": "qatranslator-je-apim-org"
    },
    "cognitive": {
      "name": "qatranslator-je-cognitive"
    },
    "cosmosDB": {
      "name": "qatranslator-je-cosmosdb"
    },
    "functions": {
      "name": "qatranslator-je-func",
      "planName": "qatranslator-je-funcplan"
    },
    "insights": {
      "name": "qatranslator-je-insights"
    },
    "storageAccount": {
      "name": "qatranslatorjesa"
    },
    "vault": {
      "keyNames": {
        "manualImportData": "manual-import-data"
      },
      "name": "qatranslator-je-vault",
      "secretNames": {
        "cognitiveKey": "cognitive-key",
        "cosmosDBPrimaryKey": "cosmos-db-primary-key",
        "cosmosDBPrimaryReadonlyKey": "cosmos-db-primary-readonly-key",
        "deeplAuthKey": "deepl-auth-key",
        "insightsConnectionString": "insights-connection-string",
        "insightsInstrumentationKey": "insights-instrumentation-key",
        "storageConnectionString": "storage-connection-string"
      }
    },
    "workspaces": {
      "name": "qatranslator-je-ws"
    }
  },
  "resources": [
    {
      "type": "Microsoft.ApiManagement/service",
      "apiVersion": "2021-01-01-preview",
      "name": "[variables('apim').name]",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "SystemAssigned"
      },
      "sku": {
        "name": "Consumption",
        "capacity": 0
      },
      "properties": {
        "customProperties": {
          "Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2": "false",
          "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Ssl30": "false",
          "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10": "false",
          "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11": "false",
          "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10": "false",
          "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11": "false"
        },
        "publisherEmail": "[parameters('azureApimPublisherEmail')]",
        "publisherName": "[variables('apim').orgName]"
      },
      "resources": [
        {
          "type": "apis",
          "apiVersion": "2021-12-01-preview",
          "name": "[variables('apim').apisName]",
          "dependsOn": [
            "[resourceId('Microsoft.ApiManagement/service', variables('apim').name)]",
            "[resourceId('Microsoft.Web/sites', variables('functions').name)]"
          ],
          "properties": {
            "apiRevision": "1",
            "description": "QuestionAnswerPortalでのWebアプリケーションから実行するAPIリファレンスです",
            "displayName": "QuestionAnswerPortalAPIs",
            "isCurrent": true,
            "path": "api",
            "protocols": [
              "https"
            ],
            "subscriptionRequired": false
          }
        },
        {
          "type": "apis",
          "apiVersion": "2021-12-01-preview",
          "name": "[variables('apim').apisHealthcheckName]",
          "dependsOn": [
            "[resourceId('Microsoft.ApiManagement/service', variables('apim').name)]",
            "[resourceId('Microsoft.Web/sites', variables('functions').name)]"
          ],
          "properties": {
            "apiRevision": "1",
            "description": "FunctionsのヘルスチェックAPIリファレンスです",
            "displayName": "HealthCheckAPIs",
            "isCurrent": true,
            "path": "",
            "protocols": [
              "https"
            ],
            "subscriptionRequired": true
          }
        },
        {
          "type": "namedValues",
          "apiVersion": "2021-12-01-preview",
          "name": "[variables('apim').namedValuesNames.insightsInstrumentationKey]",
          "dependsOn": [
            "[resourceId('Microsoft.ApiManagement/service', variables('apim').name)]",
            "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('vault').name, variables('vault').secretNames.insightsInstrumentationKey)]"
          ],
          "properties": {
            "displayName": "[variables('apim').namedValuesNames.insightsInstrumentationKey]",
            "keyVault": {
              "secretIdentifier": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('vault').name, variables('vault').secretNames.insightsInstrumentationKey), '2021-11-01-preview', 'Full').properties.secretUri]"
            },
            "secret": true
          }
        },
        {
          "type": "loggers",
          "apiVersion": "2019-01-01",
          "name": "[variables('apim').loggersName]",
          "dependsOn": [
            "[resourceId('Microsoft.ApiManagement/service', variables('apim').name)]",
            "[resourceId('Microsoft.ApiManagement/service/namedValues', variables('apim').name, variables('apim').namedValuesNames.insightsInstrumentationKey)]",
            "[resourceId('microsoft.insights/components', variables('insights').name)]"
          ],
          "properties": {
            "credentials": {
              "instrumentationKey": "[concat('{{', variables('apim').namedValuesNames.insightsInstrumentationKey, '}}')]"
            },
            "loggerType": "applicationInsights",
            "resourceId": "[resourceId('microsoft.insights/components', variables('insights').name)]"
          }
        },
        {
          "type": "diagnostics",
          "apiVersion": "2019-01-01",
          "name": "applicationinsights",
          "dependsOn": [
            "[resourceId('Microsoft.ApiManagement/service', variables('apim').name)]",
            "[resourceId('Microsoft.ApiManagement/service/loggers', variables('apim').name, variables('apim').loggersName)]"
          ],
          "properties": {
            "alwaysLog": "allErrors",
            "httpCorrelationProtocol": "Legacy",
            "logClientIp": true,
            "loggerId": "[resourceId('Microsoft.ApiManagement/service/loggers', variables('apim').name, variables('apim').loggersName)]",
            "sampling": {
              "percentage": 100,
              "samplingType": "fixed"
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2022-03-01",
      "name": "[variables('cognitive').name]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "F0"
      },
      "kind": "TextTranslation",
      "properties": {
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "apiVersion": "2022-02-15-preview",
      "kind": "GlobalDocumentDB",
      "type": "Microsoft.DocumentDb/databaseAccounts",
      "name": "[variables('cosmosDB').name]",
      "location": "[resourceGroup().location]",
      "properties": {
        "backupPolicy": {
          "periodicModeProperties": {
            "backupIntervalInMinutes": 240,
            "backupRetentionIntervalInHours": 8,
            "backupStorageRedundancy": "Local"
          },
          "type": "Periodic"
        },
        "capabilities": [
          {
            "name": "EnableServerless"
          }
        ],
        "capacity": {
          "totalThroughputLimit": 4000
        },
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Eventual"
        },
        "databaseAccountOfferType": "Standard",
        "enableFreeTier": false,
        "ipRules": [],
        "isVirtualNetworkFilterEnabled": false,
        "locations": [
          {
            "failoverPriority": 0,
            "id": "[concat(variables('cosmosDB').name, '-', resourceGroup().location)]",
            "locationName": "[resourceGroup().location]"
          }
        ],
        "virtualNetworkRules": []
      },
      "tags": {
        "defaultExperience": "false",
        "hidden-cosmos-mmspecial": ""
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccount').name]",
      "location": "[resourceGroup().location]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "minimumTlsVersion": "TLS1_2",
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "apiVersion": "2021-03-01",
      "name": "[variables('functions').planName]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "sku": {
        "Name": "Y1",
        "Tier": "Dynamic"
      },
      "kind": "",
      "properties": {
        "name": "[variables('functions').planName]",
        "numberOfWorkers": "1",
        "workerSize": "0",
        "workerSizeId": "0"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[variables('workspaces').name]",
      "subscriptionId": "[subscription().subscriptionId]",
      "resourceGroup": "[resourceGroup().name]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "apiVersion": "2015-11-01-preview",
              "name": "[variables('workspaces').name]",
              "type": "Microsoft.OperationalInsights/workspaces",
              "location": "[resourceGroup().location]",
              "properties": {}
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2020-02-02-preview",
      "name": "[variables('insights').name]",
      "type": "microsoft.insights/components",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('workspaces').name]"
      ],
      "kind": "web",
      "properties": {
        "ApplicationId": "[variables('functions').name]",
        "Application_Type": "web",
        "Flow_Type": "Bluefield",
        "Request_Source": "rest",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('workspaces').name)]"
      }
    },
    {
      "apiVersion": "2018-11-01",
      "name": "[variables('functions').name]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "tags": {
        "hidden-link: /app-insights-resource-id": "[resourceId('microsoft.insights/components', variables('insights').name)]"
      },
      "dependsOn": [
        "[resourceId('microsoft.insights/components', variables('insights').name)]",
        "[resourceId('Microsoft.Web/serverfarms', variables('functions').planName)]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "kind": "functionapp",
      "properties": {
        "clientAffinityEnabled": false,
        "httpsOnly": true,
        "name": "[variables('functions').name]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('functions').planName)]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "COSMOSDB_URI",
              "value": "[concat('https://', variables('cosmosDB').name, '.documents.azure.com:443')]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "node"
            },
            {
              "name": "WEBSITE_ENABLE_SYNC_UPDATE_SITE",
              "value": "true"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~16"
            }
          ],
          "cors": {
            "allowedOrigins": [
              "https://portal.azure.com"
            ]
          },
          "ftpsState": "Disabled",
          "keyVaultReferenceIdentity": "SystemAssigned",
          "netFrameworkVersion": "v6.0",
          "use32BitWorkerProcess": false
        },
        "virtualNetworkSubnetId": null
      }
    },
    {
      "apiVersion": "2021-11-01-preview",
      "name": "[variables('vault').name]",
      "location": "[resourceGroup().location]",
      "type": "Microsoft.KeyVault/vaults",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('apim').name)]",
        "[resourceId('Microsoft.Web/sites', variables('functions').name)]"
      ],
      "properties": {
        "accessPolicies": [
          {
            "objectId": "[reference(resourceId('Microsoft.ApiManagement/service', variables('apim').name), '2021-01-01-preview', 'Full').identity.principalId]",
            "tenantId": "[tenant().tenantId]",
            "permissions": {
              "keys": [],
              "secrets": [
                "Get",
                "list"
              ],
              "certificates": []
            }
          },
          {
            "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('functions').name), '2018-11-01', 'Full').identity.principalId]",
            "tenantId": "[tenant().tenantId]",
            "permissions": {
              "keys": [
                "get",
                "decrypt"
              ],
              "secrets": [
                "Get"
              ],
              "certificates": []
            }
          }
        ],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false,
        "enableRbacAuthorization": false,
        "enableSoftDelete": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "allow",
          "ipRules": [],
          "virtualNetworkRules": []
        },
        "publicNetworkAccess": "Enabled",
        "sku": {
          "family": "A",
          "name": "Standard"
        },
        "softDeleteRetentionInDays": 90,
        "tenantId": "[tenant().tenantId]"
      },
      "resources": [
        {
          "type": "keys",
          "apiVersion": "2021-11-01-preview",
          "name": "[variables('vault').keyNames.manualImportData]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults', variables('vault').name)]"
          ],
          "properties": {
            "attributes": {
              "enabled": true
            },
            "keyOps": [
              "encrypt",
              "decrypt"
            ],
            "keySize": 4096,
            "kty": "RSA"
          }
        },
        {
          "type": "secrets",
          "apiVersion": "2021-11-01-preview",
          "name": "[variables('vault').secretNames.cognitiveKey]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.CognitiveServices/accounts', variables('cognitive').name)]",
            "[resourceId('Microsoft.KeyVault/vaults', variables('vault').name)]"
          ],
          "properties": {
            "attributes": {
              "enabled": true
            },
            "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('cognitive').name), '2022-03-01').key1]"
          }
        },
        {
          "type": "secrets",
          "apiVersion": "2021-11-01-preview",
          "name": "[variables('vault').secretNames.cosmosDBPrimaryKey]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.DocumentDb/databaseAccounts', variables('cosmosDB').name)]",
            "[resourceId('Microsoft.KeyVault/vaults', variables('vault').name)]"
          ],
          "properties": {
            "attributes": {
              "enabled": true
            },
            "value": "[listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('cosmosDB').name), '2022-02-15-preview').primaryMasterKey]"
          }
        },
        {
          "type": "secrets",
          "apiVersion": "2021-11-01-preview",
          "name": "[variables('vault').secretNames.cosmosDBPrimaryReadonlyKey]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.DocumentDb/databaseAccounts', variables('cosmosDB').name)]",
            "[resourceId('Microsoft.KeyVault/vaults', variables('vault').name)]"
          ],
          "properties": {
            "attributes": {
              "enabled": true
            },
            "value": "[listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('cosmosDB').name), '2022-02-15-preview').primaryReadonlyMasterKey]"
          }
        },
        {
          "type": "secrets",
          "apiVersion": "2021-11-01-preview",
          "name": "[variables('vault').secretNames.deeplAuthKey]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults', variables('vault').name)]"
          ],
          "properties": {
            "attributes": {
              "enabled": true
            },
            "value": "[parameters('deeplAuthKey')]"
          }
        },
        {
          "type": "secrets",
          "apiVersion": "2021-11-01-preview",
          "name": "[variables('vault').secretNames.insightsConnectionString]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('microsoft.insights/components', variables('insights').name)]",
            "[resourceId('Microsoft.KeyVault/vaults', variables('vault').name)]"
          ],
          "properties": {
            "attributes": {
              "enabled": true
            },
            "value": "[reference(resourceId('microsoft.insights/components', variables('insights').name), '2015-05-01').ConnectionString]"
          }
        },
        {
          "type": "secrets",
          "apiVersion": "2021-11-01-preview",
          "name": "[variables('vault').secretNames.insightsInstrumentationKey]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('microsoft.insights/components', variables('insights').name)]",
            "[resourceId('Microsoft.KeyVault/vaults', variables('vault').name)]"
          ],
          "properties": {
            "attributes": {
              "enabled": true
            },
            "value": "[reference(resourceId('microsoft.insights/components', variables('insights').name), '2015-05-01').InstrumentationKey]"
          }
        },
        {
          "type": "secrets",
          "apiVersion": "2021-11-01-preview",
          "name": "[variables('vault').secretNames.storageConnectionString]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults', variables('vault').name)]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccount').name)]"
          ],
          "properties": {
            "attributes": {
              "enabled": true
            },
            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccount').name,';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccount').name), '2021-08-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
          }
        }
      ]
    }
  ]
}
